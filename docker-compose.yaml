version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    expose:
      - "27017"
    volumes:
      - mongo-data:/data/db
    restart: always
    networks:
      - shopping-network

  backend:
    build:
      context: ./backend
    container_name: backend
    expose:
      - "8080"
    depends_on:
      - mongodb
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/shopping_list_db
    restart: always
    networks:
      - shopping-network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    expose:
      - "80"
    depends_on:
      - backend
    restart: always
    networks:
      - shopping-network

  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak-db:/var/lib/postgresql/data
    networks:
      - shopping-network

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0
    command: start
    depends_on:
      - keycloak-db
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_DB_URL_DATABASE: keycloak
      KC_HOSTNAME: 80.211.200.112
      KC_PROXY: edge
      KC_HTTP_RELATIVE_PATH: /auth 
    expose:
      - "8080"
    networks:
      - shopping-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/etc/nginx/certs
    depends_on:
      - frontend
      - backend
      - keycloak
    networks:
      - shopping-network

volumes:
  mongo-data:
  keycloak-db:

networks:
  shopping-network:
    driver: bridge
